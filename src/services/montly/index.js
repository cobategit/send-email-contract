const ejs = require('ejs')
const sendEmail = require('../../helpers/email/index')
const {
  fetchMailOpening,
  fetchUserEmail,
  fetchUserEmailSender,
  fetchStoredProceduredMontly,
} = require('../../helpers/mysql/index')
require('dotenv').config()
const moment = require('moment')

const cronJobsWeekly = async () => {
  try {
    const userEmailSender = await fetchUserEmailSender()
    const mailOpening = await fetchMailOpening(2)
    const userEmail = await fetchUserEmail('')

    // await Promise.all(
    //   userEmail.map(async (user) => {
    const storedProceduredMontly = await fetchStoredProceduredMontly(
      // user['stockpile_id'] ?? 1
      3
    )

    ejs.renderFile(
      __dirname + '/montly-email.ejs',
      {
        mailOpening: mailOpening['message'],
        dataMontly: storedProceduredMontly,
        // dear: user['name'],
        dear: 'Pak alan',
        moment: moment,
      },
      async (err, resHtml) => {
        if (!err) {
          const optionsEmail = {
            userEmailSender: userEmailSender['email'],
            userPasswordSender: userEmailSender['password'],
            from: userEmailSender['email'],
            // to: user['email'],
            to: 'alan@jatimpropertindo.com',
            // to: 'mancunianmerchant816@gmail.com',
            // bcc: process.env.EMAIL_BCC,
            // subject: `${user['stockpile_name']} Curah` ?? 'Subject Generated by System: Curah',
            subject: 'Subject Generated by System: Montly',
            html: resHtml,
          }

          await sendEmail(optionsEmail)
        } else {
          throw new Error(err)
        }
      }
    )
    //   })
    // )
  } catch (error) {
    throw new Error(error)
  }
}

cronJobsWeekly()
